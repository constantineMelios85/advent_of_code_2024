; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: pushd c:\Users\costa\repos\advent_of_code_2024\clojure_advent & cmd.exe /d /c lein update-in :dependencies conj [nrepl,"1.1.1"] -- update-in :plugins conj [cider/cider-nrepl,"0.47.1"] -- update-in [:repl-options,:nrepl-middleware] conj '["cider.nrepl/cider-middleware"]' -- repl :headless & popd
; Using host:port 127.0.0.1:61345 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉clojure-advent.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉clojure-advent.core꞉> 
; Jack-in done.
clj꞉clojure-advent.core꞉> (+ 2 4 6)
12
clj꞉clojure-advent.core꞉> (strt "Anastasis " "is " "foverakias!")
; Syntax error compiling at (c:\Users\costa\repos\advent_of_code_2024\clojure_advent\.calva\output-window\output.calva-repl:52:27).
; Unable to resolve symbol: strt in this context
clj꞉clojure-advent.core꞉> (str "Anastasis " "is " "foverakias!")
"Anastasis is foverakias!"
clj꞉clojure-advent.core꞉> (float? 3)
false
clj꞉clojure-advent.core꞉> (float? 3.0)
true
clj꞉clojure-advent.core꞉> (* 3 4 2)
24
clj꞉clojure-advent.core꞉> (* 3 2 3)
18
clj꞉clojure-advent.core꞉> (*)
1
clj꞉clojure-advent.core꞉> (+)
0
clj꞉clojure-advent.core꞉> (/)
; Execution error (ArityException) at clojure-advent.core/eval10573 (form-init13708968835561077742.clj:69).
; Wrong number of args (0) passed to: clojure.core//
clj꞉clojure-advent.core꞉> (/ 18 3)
6
clj꞉clojure-advent.core꞉> (+ 29 148 53)
230
clj꞉clojure-advent.core꞉> (+ 190 292 3267)
3749
clj꞉clojure-advent.core꞉> 
